name: "Release: Build, Test and Deploy"

on:
  push:
    tags:
      - v*

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]
    steps:
      - name: Checkout jwm.robotstxt
        uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.2

      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - name: Checkout jwm.robotstxt
        uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: Build sdist
        run: pipx run build --sdist

      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  publish_test_pypi:
    name: Publish to TestPyPI
    needs: 
      - build_wheels
      - build_sdist
    runs-on: ubuntu-latest
    environment: 
      name: testpypi
      url: https://test.pypi.org/p/jwm.robotstxt
    permissions:
      id-token: write
    steps:
      - name: Download sdist and wheels
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Publish to TestPyPi
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish_pypi:
    name: Publish to PyPi
    needs: 
      - build_wheels
      - build_sdist
    runs-on: ubuntu-latest
    environment: 
      name: pypi
      url: https://pypi.org/p/jwm.robotstxt
    permissions:
      id-token: write
    steps:
      - name: Download sdist and wheels
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Publish to PyPi
        uses: pypa/gh-action-pypi-publish@release/v1
  
  github_release:
    name: Create Github release
    needs:
      - publish_pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download sdist and wheels
        uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v2.1.1
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""

      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'

  build_documentation:
    name: Build Documentation
    needs: 
      - publish_pypi
    runs-on: ubuntu-latest
    steps:
      - name: Checkout jwm.robotstxt
        uses: actions/checkout@v4
        with:
          submodules: "true"

      - name: Install Python 3.10
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
        
      - name: Create Virtual Environment
        run: python3.10 -m venv ./.venv
      
      - name: Install jwm.robotstxt[doc] into Virtual Environment
        run: python3.10 -m pip install jwm.robotstxt[doc]

      - name: Build HTML Documentation
        run: . ./.venv/bin/activate && cd ./docs && make html

      - name: Upload Documentation Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: html-docs
          path: ./docs/build/html/

  deploy_documentation:
    name: Deploy Documentation
    needs: 
      - build_documentation
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Documentation Artifacts
        uses: actions/download-artifact@v4
        with:
          name: html-docs
          path: ./docs/build/html

      - name: Deploy to Github Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs/build/html